# Initialize built-in completion
autoload -Uz compinit
compinit

# Initialize Oh My Zsh
ZSH="${HOME}/.oh-my-zsh"
if [[ -f "${ZSH}/oh-my-zsh.sh" ]]; then
    ZSH_THEME="robbyrussell"
    export ZSH
    source ${ZSH}/oh-my-zsh.sh
fi

# Set default visual editor
export VISUAL="vim"

# Prefix shell prompt if started inside Vim
if [[ -v VIM ]]; then
    PS1="[vim] ${PS1}"
fi

# Add shell hook to enable direnv
if (command -v direnv > /dev/null); then
    eval "$(direnv hook zsh)"
fi

# Set alias for running command in Nix environment
if (command -v nix > /dev/null); then
    alias nrc="nix shell --file default.nix -c" "$@"
fi

# Set alias for bulk renaming files using qmv
if (command -v qmv > /dev/null); then
    alias bulk-rename="qmv --format=destination-only" "$@"
fi

# Set alias to make use of SSH kitten when invoked from the Kitty terminal
if [[ "${TERM}" = "xterm-kitty" ]]; then
    alias ssh="kitty +kitten ssh"
fi

# Set alias for default tmux session name
if (command -v tmux > /dev/null); then
    alias tmux="tmux new-session -A -s tmux" "$@"
fi

# Configure Ansible
export ANSIBLE_CALLBACKS_ENABLED="profile_tasks"
export ANSIBLE_RETRY_FILES_ENABLED="False"
if [[ -f "${HOME}/.ansible-vault-password" ]]; then
    export ANSIBLE_VAULT_PASSWORD_FILE="${HOME}/.ansible-vault-password"
fi

# Configure GPG
export GPG_TTY="$(tty)"

# Configure Homebrew
if (command -v /opt/homebrew/bin/brew > /dev/null); then
    export HOMEBREW_NO_ANALYTICS=1
    export HOMEBREW_NO_ENV_HINTS=1
fi

# Configure pytest
export PYTEST_ADDOPTS="-vv"
export PYTEST_THEME="nord"
export PYTEST_THEME_MODE="dark"

# Configure Ruby Gems
export GEM_HOME="${HOME}/.gems"
if [[ ! ":${PATH}:" =~ ":${HOME}/.gems/bin:" ]]; then
    export PATH="${HOME}/.gems/bin:${PATH}"
fi

# Configure Rust
if [[ -f "${HOME}/.cargo/env" ]]; then
    # Add rust tools to PATH
    source "${HOME}/.cargo/env"

    # Shell completions for rust tools
    eval "$(rustup completions zsh rustup)"
fi
